// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _RobustBetaReg_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// timesTwo
int timesTwo(int x);
RcppExport SEXP _RobustBetaReg_timesTwo(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(timesTwo(x));
    return rcpp_result_gen;
END_RCPP
}
// times4
int times4(int x);
RcppExport SEXP _RobustBetaReg_times4(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(times4(x));
    return rcpp_result_gen;
END_RCPP
}
// a19
arma::mat a19(arma::mat x);
RcppExport SEXP _RobustBetaReg_a19(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(a19(x));
    return rcpp_result_gen;
END_RCPP
}
// a20
arma::mat a20(arma::mat x);
RcppExport SEXP _RobustBetaReg_a20(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(a20(x));
    return rcpp_result_gen;
END_RCPP
}
// eta
NumericVector eta(arma::mat x, arma::mat theta);
RcppExport SEXP _RobustBetaReg_eta(SEXP xSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(eta(x, theta));
    return rcpp_result_gen;
END_RCPP
}
// degbeta_C
NumericVector degbeta_C(NumericVector y_star, NumericVector mu, NumericVector phi);
RcppExport SEXP _RobustBetaReg_degbeta_C(SEXP y_starSEXP, SEXP muSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y_star(y_starSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(degbeta_C(y_star, mu, phi));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RobustBetaReg_rcpp_hello_world", (DL_FUNC) &_RobustBetaReg_rcpp_hello_world, 0},
    {"_RobustBetaReg_timesTwo", (DL_FUNC) &_RobustBetaReg_timesTwo, 1},
    {"_RobustBetaReg_times4", (DL_FUNC) &_RobustBetaReg_times4, 1},
    {"_RobustBetaReg_a19", (DL_FUNC) &_RobustBetaReg_a19, 1},
    {"_RobustBetaReg_a20", (DL_FUNC) &_RobustBetaReg_a20, 1},
    {"_RobustBetaReg_eta", (DL_FUNC) &_RobustBetaReg_eta, 2},
    {"_RobustBetaReg_degbeta_C", (DL_FUNC) &_RobustBetaReg_degbeta_C, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_RobustBetaReg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
